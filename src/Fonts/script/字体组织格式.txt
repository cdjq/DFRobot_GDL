[
000, 000, 072, 063, 000, 000, 000, 000, 096, 084, 
000, 000, 102, 164, 198, 194, 164, 094, 002, 004, 
098, 086, 004, 002, 000, 000, 096, 084, 000, 000, 
000, 000, 012, 010, 000, 000]36个数据

7*6

从左上
角开始扫描

unicode码 长度  x偏移  y偏移  数据宽度 （数据高度） 数据位图（扫描方式，从做至右，从上到下）
字体
unicode码 len xoffset  yoffset w
for(int i = y+offset)


数据位图表现形式
一个字节来表示前景色和背景色的长度
高低字节的最高位表示前景色还是背景色  0：背景色  1代表前景色 (全0代表位图结束)
7  6 5 4  3   2 1 0
bg   len  bg    len
fg   len  fg    len
77
ff

22 0110101 0011  10 0

[[  0   0  72  63                           2A
	0   0   0   0   96  84                  4A
	0   0 102 164 198 194 164  94   2       2F
	4  98  86   4   2 0   0                 C2
	96  84   0   0   0   0                  A4
	12  10   0   0                          A2
	35                                      

数据位图组织方式2：
1.用一个字节的高4位代表前景色的位数，低字节表示低4位的位数
2.一次前景色背景色结束后，后一个数据位为0表示和前面的一样，为1，则表示新的偏移，
前4位表示前景色的位数，后四位表示背景色的位数
1.一次前景色背景色过后

前景色背景色flag（一个字节高4位，一个字节低4位）
编码
解码

第一次用10位来表示前景色和背景色的位数以及顺序

count:
count%2,通过count为奇数来判断一次完整的前景和背景是否结束
每1个字节装载一次

如何编码：
方式1：
   每反转一次就将数据存入列表，并记录它在列表中的索引值和该位还剩多少个有效位

字体命名方式：
   
文件操作：
1.读取ttf文件夹里所有的ttf文件，并将文件名存放到TTFfilename.txt文档里;
2.从TTFfilename.txt文档里，读取文档名的信息，并生成相应的.h文件，命名方式filename，该文件放到fonts文件下
3.从Chinese.txt文档里读取汉字信息，并将其转化为unicode码，存放到相应的


